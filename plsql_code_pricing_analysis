-- PL/SQL code to pull in Enterprise Resource Platform (ERP) data for pricing analysis.

SELECT 
        C.MARKET_CODE||' - '||C.MARKET_DESC AS "MARKET",
        I.PRIME_COMMODITY||' - '||IFSAPP.COMMODITY_GROUP_API.Get_DESCRIPTION(I.PRIME_COMMODITY) AS "PRIME_COMMODITY",
        I.SECOND_COMMODITY||' - '||IFSAPP.COMMODITY_GROUP_API.Get_DESCRIPTION(I.SECOND_COMMODITY) AS "SECOND_COMMODITY",
        C. CUSTOMER_NO||' - '|| C.CUSTOMER_NAME AS "CUSTOMER",
        PPS.VENDOR_PART_NO AS "SUPPLIER_NO",
        PPS.VENDOR_NO,
	IFSAPP.SUPPLIER_API.Get_VENDOR_NAME(PPS.VENDOR_NO) AS "SUPPLIER",
        C.INVOICED_QTY AS "QTY",
        C.NET_AMOUNT,
        C.CONTRACT,
        C.INVOICE_DATE,
        C.CATALOG_NO||' - '||C.CATALOG_DESC AS "PART NO",
        IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) as "Order Type",
        case when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EMR'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EM1') then 'Emergency'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='SP'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='SP1') then 'Standard'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EXP'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EX1') then 'Export'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='TR') then 'Transfer'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='STO'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='ST1') then 'Stock'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) IS NULL) then 'Return'
       		else 'Other - Misc'
	end as "ORDER TYPE CATEGORY",
        NULL AS "ORDER STATUS",
 	C.ORDER_NO,
        C.COST,
        ifsapp.sales_part_salesman_api.get_name(ifsapp.cust_ord_customer_api.get_salesman_code(c.customer_no)) AS "DDM",
        S.INVENTORY_VALUE,
        C.CUST_GRP AS "Stat Group",
        SPB.BASE_PRICE,
        SPB.PREVIOUS_BASE_PRICE,
        SPB.LAST_UPDATED,
        case when PREVIOUS_BASE_PRICE =0 then 0 else ROUND((BASE_PRICE-PREVIOUS_BASE_PRICE)/PREVIOUS_BASE_PRICE,3) end AS BASE_PRICE_DIFFERENCE,
        ROUND(NET_AMOUNT - COST,2) AS "GROSS PROFIT",
        case when NET_AMOUNT=0 then 0 else round(1 - (COST / NET_AMOUNT),2) end AS "MARGIN PERCENT"
        
   FROM IFSAPP.CUST_ORD_INVO_STAT C 
   
   LEFT OUTER JOIN IFSAPP.INVENTORY_PART I
         ON  C.CONTRACT = I.CONTRACT 
         AND C.PART_NO = I.PART_NO
   
   INNER JOIN IFSAPP.IDENTITY_INVOICE_INFO II
         ON  C.COMPANY = II.COMPANY 
         AND C.CUSTOMER_NO = II.IDENTITY 
         
   INNER JOIN IFSAPP.INVENTORY_PART_UNIT_COST_SUM S
         ON C.CONTRACT = S.CONTRACT 
         AND C.PART_NO = S.PART_NO

   INNER JOIN IFSAPP.SALES_PART_BASE_PRICE SPB
        ON C.CATALOG_NO = SPB.CATALOG_NO
        AND BASE_PRICE_SITE = 'BL'

   LEFT OUTER JOIN IFSAPP.PURCHASE_PART_SUPPLIER PPS
        ON C.PART_NO = PPS.PART_NO
        AND C. CONTRACT =PPS.CONTRACT
        AND upper(PRIMARY_VENDOR) = upper( 'Primary supplier' )
        
  WHERE (C.CONTRACT = 'BL')
    AND C.CUST_GRP <> 'IC'
    AND ((C.INVOICE_DATE >= TO_DATE('01-01-2014 00:00:00', 'DD-MM-YYYY HH24:MI:SS') 
    AND C.INVOICE_DATE <= TO_DATE('31-01-2014 00:00:00', 'DD-MM-YYYY HH24:MI:SS')) 
    OR (C.INVOICE_DATE >= TO_DATE('01-01-2015 00:00:00', 'DD-MM-YYYY HH24:MI:SS') 
    AND C.INVOICE_DATE <= TO_DATE('31-01-2015 00:00:00', 'DD-MM-YYYY HH24:MI:SS')))

  ORDER BY I.PRIME_COMMODITY,
           II.GROUP_ID,
           C.MARKET_CODE,
           C.CATALOG_NO,
           C.ORDER_NO

UNION ALL

(SELECT 
        IFSAPP.CUST_ORD_CUSTOMER_API.Get_MARKET_CODE(C.CUSTOMER_NO) AS "MARKET",
        I.PRIME_COMMODITY||' - '||IFSAPP.COMMODITY_GROUP_API.Get_DESCRIPTION(I.PRIME_COMMODITY) AS "PRIME_COMMODITY",
        I.SECOND_COMMODITY||' - '||IFSAPP.COMMODITY_GROUP_API.Get_DESCRIPTION(I.SECOND_COMMODITY) AS "SECOND_COMMODITY",
        C. CUSTOMER_NO||' - '|| C.CUSTOMER_NAME AS "CUSTOMER",
        PPS.VENDOR_PART_NO AS "SUPPLIER_NO",
        PPS.VENDOR_NO,
	IFSAPP.SUPPLIER_API.Get_VENDOR_NAME(PPS.VENDOR_NO) AS "SUPPLIER",
        C.DESIRED_QTY AS "QTY",
        IFSAPP.Customer_Order_Line_API.Get_Base_Sale_Price_Total(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO) AS "Net Amount",
        C.CONTRACT,
	C.DATE_ENTERED,
        C.CATALOG_NO||' - '||C.CATALOG_DESC AS "PART NO",
        IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) as "Order Type",
        case when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EMR'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EM1') then 'Emergency'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='SP'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='SP1') then 'Standard'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EXP'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='EX1') then 'Export'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='TR') then 'Transfer'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='STO'
		OR IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) ='ST1') then 'Stock'
		when (IFSAPP.CUSTOMER_ORDER_API.Get_ORDER_ID(C.ORDER_NO) IS NULL) then 'Return'
       		else 'Other - Misc'
	end as "ORDER TYPE CATEGORY",
	C.LINE_STATE AS "ORDER STATUS",
 	C.ORDER_NO,
        IFSAPP.Customer_Order_Line_API.Get_Total_Cost(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO) AS "Cost",
        ifsapp.sales_part_salesman_api.get_name(ifsapp.cust_ord_customer_api.get_salesman_code(c.customer_no)) AS "DDM",
        S.INVENTORY_VALUE,
        IFSAPP.CUST_ORD_CUSTOMER_API.Get_CUST_GRP(C.CUSTOMER_NO) AS "Stat Group",
        SPB.BASE_PRICE,
        SPB.PREVIOUS_BASE_PRICE,
        SPB.LAST_UPDATED,
	case when PREVIOUS_BASE_PRICE =0 then 0 else ROUND((BASE_PRICE-PREVIOUS_BASE_PRICE)/PREVIOUS_BASE_PRICE,3) end AS BASE_PRICE_DIFFERENCE,
	((IFSAPP.Customer_Order_Line_API.Get_Base_Sale_Price_Total(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO))-(IFSAPP.Customer_Order_Line_API.Get_Total_Cost(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO))) AS "GROSS PROFIT",
	ROUND(((IFSAPP.Customer_Order_Line_API.Get_Base_Sale_Price_Total(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO))-(IFSAPP.Customer_Order_Line_API.Get_Total_Cost(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO))/(IFSAPP.Customer_Order_Line_API.Get_Base_Sale_Price_Total(C.ORDER_NO,C.LINE_NO,C.REL_NO,C.LINE_ITEM_NO))),2) AS "MARGIN PERCENT"
   
FROM IFSAPP.CUSTOMER_ORDER_JOIN_UIV C 
   
   LEFT OUTER JOIN IFSAPP.INVENTORY_PART I
         ON  C.CONTRACT = I.CONTRACT 
         AND C.PART_NO = I.PART_NO
   
   INNER JOIN IFSAPP.IDENTITY_INVOICE_INFO II
         ON C.CUSTOMER_NO = II.IDENTITY 
	
   INNER JOIN IFSAPP.CUSTOMER_ORDER CR	
	 ON C.ORDER_NO = CR.ORDER_NO
         
   INNER JOIN IFSAPP.INVENTORY_PART_UNIT_COST_SUM S
         ON C.CONTRACT = S.CONTRACT 
         AND C.PART_NO = S.PART_NO

   INNER JOIN IFSAPP.SALES_PART_BASE_PRICE SPB
        ON C.CATALOG_NO = SPB.CATALOG_NO
        AND BASE_PRICE_SITE = 'BL'

   LEFT OUTER JOIN IFSAPP.PURCHASE_PART_SUPPLIER PPS
        ON C.PART_NO = PPS.PART_NO
        AND C.CONTRACT = PPS.CONTRACT
        AND upper(PRIMARY_VENDOR) = upper( 'Primary supplier' )
        
  WHERE (C.CONTRACT = 'BL')
    AND IFSAPP.CUST_ORD_CUSTOMER_API.Get_CUST_GRP(C.CUSTOMER_NO) <> 'IC'
    AND upper(C.LINE_STATE ) <> upper( 'Cancelled' )
    AND upper(C.LINE_STATE ) <> upper( 'Invoiced/Closed' )

  ORDER BY I.PRIME_COMMODITY,
           II.GROUP_ID,
           MARKET,
           C.CATALOG_NO)
